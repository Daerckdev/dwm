diff --git a/config.def.h b/config.def.h
index a2ac963..19c649c 100644
--- a/config.def.h
+++ b/config.def.h
@@ -12,14 +12,21 @@ static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
 static const char col_gray4[]       = "#eeeeee";
 static const char col_cyan[]        = "#005577";
+static const char seltag[]          = "#005577";
+static const char windowpresent[]   = "#ff2b1c";
+static const char windowurgpresent[]= "#00ba1f";
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
 	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+    [SchemeUpLines] = { seltag },
+    [SchemeBottomLines] = { windowpresent, windowurgpresent },
 };
 
 /* tagging */
 static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const int linetagpad = 3;
+static const int linetagthickness = 2;
 
 static const Rule rules[] = {
 	/* xprop(1):
diff --git a/dwm.c b/dwm.c
index 5e4d494..8dfa8d2 100644
--- a/dwm.c
+++ b/dwm.c
@@ -59,7 +59,7 @@
 
 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
-enum { SchemeNorm, SchemeSel }; /* color schemes */
+enum { SchemeNorm, SchemeSel, SchemeUpLines, SchemeBottomLines }; /* color schemes */
 enum { NetSupported, NetWMName, NetWMState, NetWMCheck,
        NetWMFullscreen, NetActiveWindow, NetWMWindowType,
        NetWMWindowTypeDialog, NetClientList, NetLast }; /* EWMH atoms */
@@ -717,12 +717,16 @@ drawbar(Monitor *m)
 	x = 0;
 	for (i = 0; i < LENGTH(tags); i++) {
 		w = TEXTW(tags[i]);
-		drw_setscheme(drw, scheme[m->tagset[m->seltags] & 1 << i ? SchemeSel : SchemeNorm]);
-		drw_text(drw, x, 0, w, bh, lrpad / 2, tags[i], urg & 1 << i);
-		if (occ & 1 << i)
-			drw_rect(drw, x + boxs, boxs, boxw, boxw,
-				m == selmon && selmon->sel && selmon->sel->tags & 1 << i,
-				urg & 1 << i);
+		drw_setscheme(drw, scheme[SchemeNorm]);
+		drw_text(drw, x, 0, w, bh, lrpad / 2, tags[i], 0);
+        if (occ & 1 << i) {
+            drw_setscheme(drw, scheme[SchemeBottomLines]);
+            drw_rect(drw, x + linetagpad, bh - linetagthickness, w - (linetagpad * 2), linetagthickness, 1, urg & 1 << i);
+        }
+        if (m->tagset[m->seltags] & 1 << i) {
+            drw_setscheme(drw, scheme[SchemeUpLines]);
+            drw_rect(drw, x + linetagpad, bh - linetagthickness - 17, w - (linetagpad * 2), linetagthickness, 1, 0);
+        }
 		x += w;
 	}
 	w = blw = TEXTW(m->ltsymbol);
